<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>fsi</name></assembly>
<members>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:FSIstrings.SR.stoppedDueToError">
<summary>
 Stopped due to error\n
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:14)
</summary>
</member>
<member name="P:FSIstrings.SR.SwallowResourceText(System.Boolean)">
<summary>
 If set to true, then all error messages will just return the filled &apos;holes&apos; delimited by &apos;,,,&apos;s - this is for language-neutral testing (e.g. localization-invariant baselines).
</summary>
</member>
<member name="P:FSIstrings.SR.SwallowResourceText">
<summary>
 If set to true, then all error messages will just return the filled &apos;holes&apos; delimited by &apos;,,,&apos;s - this is for language-neutral testing (e.g. localization-invariant baselines).
</summary>
</member>
<member name="M:FSIstrings.SR.fsiUse">
<summary>
 Use the given file on startup as initial input
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:23)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiUsage">
<summary>
 Usage: fsi.exe &lt;options&gt; [script.fsx [&lt;arguments&gt;]]
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:15)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiUnexpectedThreadAbortException">
<summary>
 - Unexpected ThreadAbortException (Ctrl-C) during event handling: Trying to restart...
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:58)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiTurnedTimingOn">
<summary>
 --&gt; Timing now on
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:56)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiTurnedTimingOff">
<summary>
 --&gt; Timing now off
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:57)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiTimeInfoMainString(System.String,System.String,System.String)">
<summary>
 Real: %s, CPU: %s, GC %s
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:37)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiTimeInfoGCGenerationLabelSomeShorthandForTheWordGeneration">
<summary>
 gen
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:38)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiRemaining">
<summary>
 Treat remaining arguments as command line arguments, accessed using fsi.CommandLineArgs
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:25)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiReadline">
<summary>
 Support TAB completion in console (on by default)
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:30)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiQuiet">
<summary>
 Suppress fsi writing to stdout
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:29)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiProductName(System.String)">
<summary>
 Microsoft (R) F# 2.0 Interactive build %s
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:61)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiMiscellaneous">
<summary>
 - MISCELLANEOUS -
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:20)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiLoadingFilesPrefixText">
<summary>
 Loading
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:49)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiLoad">
<summary>
 #load the given file on startup
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:24)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiLineTooLong">
<summary>
 Warning: line too long, ignoring some characters\n
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:36)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiLanguage">
<summary>
 - LANGUAGE -
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:19)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiInvalidDirective(System.String,System.String)">
<summary>
 Invalid directive &apos;#%s %s&apos;
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:35)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiInvalidAssembly(System.String)">
<summary>
 &apos;%s&apos; is not a valid assembly name
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:33)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHeader3(System.String)">
<summary>
       See &apos;%s&apos; for options
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:48)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHeader2commandLine">
<summary>
   F# Interactive command line options:
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:47)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHeader1directives">
<summary>
   F# Interactive directives:
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:40)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHashtimeInfo">
<summary>
 Toggle timing on/off
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:44)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHashrInfo">
<summary>
 Reference (dynamically load) the given DLL
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:41)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHashquitInfo">
<summary>
 Exit
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:46)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHashloadInfo">
<summary>
 Load the given file(s) as if compiled and referenced
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:43)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHashhelpInfo">
<summary>
 Display help
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:45)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiIntroTextHashIInfo">
<summary>
 Add the given search path for referenced DLLs
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:42)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiInterrupt">
<summary>
 \n- Interrupt\n
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:50)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiInputFiles">
<summary>
 - INPUT FILES -
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:16)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiHelp">
<summary>
 Display this usage message (Short form: -?)
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:26)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiGui">
<summary>
 Execute interactions on a Windows Forms event loop (on by default)
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:28)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiFailedToResolveAssembly(System.String)">
<summary>
 Failed to resolve assembly &apos;%s&apos;
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:59)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiExit">
<summary>
 \n- Exit...\n
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:51)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiExec">
<summary>
 Exit fsi after loading the files or running the .fsx script given on the command line
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:27)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiExceptionRaisedStartingServer(System.String)">
<summary>
 Exception raised when starting remoting server.\n%s
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:22)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiExceptionDuringPrettyPrinting(System.String)">
<summary>
 \n\nException raised during pretty printing.\nPlease report this so it can be fixed.\nTrace: %s\n
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:39)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiErrorsAndWarnings">
<summary>
 - ERRORS AND WARNINGS -
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:18)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiDirectoryDoesNotExist(System.String)">
<summary>
 Directory &apos;%s&apos; doesn&apos;t exist
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:34)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiDidAHashr(System.String)">
<summary>
 --&gt; Referenced &apos;%s&apos;
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:54)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiDidAHashI(System.String)">
<summary>
 --&gt; Added &apos;%s&apos; to library include path
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:55)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiCouldNotInstallCtrlCHandler(System.String)">
<summary>
 Failed to install ctrl-c handler - Ctrl-C handling will not be available. Error was:\n\t%s
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:53)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiConsoleProblem">
<summary>
 A problem occurred starting the F# Interactive process. This may be due to a known problem with background process console support for Unicode-enabled applications on some Windows systems. Try selecting Tools-&gt;Options-&gt;F# Interactive for Visual Studio and enter &apos;--fsi-server-no-unicode&apos;.
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:32)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiCodeGeneration">
<summary>
 - CODE GENERATION -
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:17)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiBindingSessionTo(System.String)">
<summary>
 Binding session to &apos;%s&apos;...
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:60)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiBanner3">
<summary>
 For help type #help;;
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:31)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiAdvanced">
<summary>
 - ADVANCED -
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:21)
</summary>
</member>
<member name="M:FSIstrings.SR.fsiAbortingMainThread">
<summary>
 - Aborting main thread...
 (Originally from C:\work\bitbucket\fsharp\fsharp\src\fsharp\Fsi\FSIstrings.txt:52)
</summary>
</member>
<member name="M:FSIstrings.SR.RunStartupValidation">
<summary>
 Call this method once to validate that all known resources are valid; throws if not
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:Internal.Utilities.Collections.List.GroupByFirst``2(Microsoft.FSharp.Collections.FSharpList{System.Tuple`2{``0,``1}})">
<summary>
 Return a new list with one element for each unique &apos;TKey. Multiple &apos;TValues are flattened. The original order of the first instance of &apos;TKey is preserved.
</summary>
</member>
<member name="">

</member>
<member name="P:Internal.Utilities.Collections.MruCache`2.MostRecent">
<summary>
 Get the most recent item if there is one.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.MruCache`2.SetAlternate(`0,`1)">
<summary>
 Set the value for the given key. This value does not have to agree with computed value.           
</summary>
</member>
<member name="M:Internal.Utilities.Collections.MruCache`2.Remove(`0)">
<summary>
 Remove the given value from the mru cache.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.MruCache`2.GetAvailable(`0)">
<summary>
 Get the value for the given key or None if not already available
</summary>
</member>
<member name="M:Internal.Utilities.Collections.MruCache`2.Get(`0)">
<summary>
 Get the value for the given key. Compute if necessary.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.MruCache`2.Clear">
<summary>
 Clear out the cache.
</summary>
</member>
<member name="">

</member>
<member name="T:Internal.Utilities.Collections.MruCache`2">
<summary>
 Simple priority caching for a small number of key\value associations.
 This cache may age-out results that have been Set by the caller.
 Because of this, the caller must be able to tolerate values 
 that aren&apos;t what was originally passed to the Set function.         
</summary>
</member>
<member name="P:Internal.Utilities.Collections.AgedLookup`2.MostRecent">
<summary>
 Get the most recent item if there is one.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.AgedLookup`2.TryPeekKeyValue(`0)">
<summary>
 Lookup the value without making it the most recent.
 Returns the original key value because the areSame function
 may have unified two different keys.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.AgedLookup`2.TryGetKeyValue(`0)">
<summary>
 Lookup a value and make it the most recent.
 Returns the original key value because the areSame function
 may have unified two different keys.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.AgedLookup`2.TryGet(`0)">
<summary>
 Lookup a value and make it the most recent. Return None if it wasn&apos;t there.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.AgedLookup`2.Remove(`0)">
<summary>
 Remove the given value from the collection.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.AgedLookup`2.Put(`0,`1)">
<summary>
 Add an element to the collection. Make it the most recent.
</summary>
</member>
<member name="M:Internal.Utilities.Collections.AgedLookup`2.Clear">
<summary>
 Remove all elements.
</summary>
</member>
<member name="">

</member>
<member name="T:Internal.Utilities.Collections.AgedLookup`2">
<summary>
 Simple aging lookup table. When a member is accessed it&apos;s
 moved to the top of the list and when there are too many elements
 the least-recently-accessed element falls of the end.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.History">
<summary>
 Class managing the command History.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Options">
<summary>
 List of available optionsCache
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Microsoft.FSharp.Compiler.Interactive.ReadLineConsole.Prompt">
<summary>
 Inset all inputs by this amount
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.ConsoleOptions">
<summary>
 System.Console.ReadKey appears to return an ANSI character (not the expected the unicode character).
 When this fix flag is true, this byte is converted to a char using the System.Console.InputEncoding.
 This is a code-around for bug://1345.
 Fixes to System.Console.ReadKey may break this code around, hence the option here.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Shell.WinFormsEventLoop">
<summary>
 This is the event loop implementation for winforms
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Shell.DummyForm">
<summary>
Use a dummy to access protected member
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:Microsoft.FSharp.Compiler.Interactive.Shell.FsiInteractionProcessor.ProcessAndRunOneInteractionFromLexbuf``1(System.Boolean,Microsoft.FSharp.Core.FSharpFunc`2{Microsoft.FSharp.Core.FSharpFunc`2{Microsoft.FSharp.Compiler.Interactive.Shell.FsiDynamicCompilerState,System.Tuple`2{Microsoft.FSharp.Compiler.Interactive.Shell.FsiDynamicCompilerState,Microsoft.FSharp.Compiler.Interactive.Shell.FsiInteractionStepStatus}},Microsoft.FSharp.Core.FSharpFunc`2{``0,System.Tuple`2{``0,Microsoft.FSharp.Compiler.Interactive.Shell.FsiInteractionStepStatus}}},``0,Microsoft.FSharp.Compiler.Lexfilter.LexFilter)">
<summary>
 Parse then process one parsed interaction.  This initially runs on the parser
 thread, then calls runCodeOnMainThread to run on the GUI thread.
 &apos;ProcessAndRunOneInteractionFromLexbuf&apos; calls the runCodeOnMainThread when it has completed
 parsing and needs to typecheck and execute a definition.  Type-checking and execution
 happens on the GUI thread.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Shell.FsiDynamicCompilerState">
<summary>
 FSI does a &quot;startup&quot; interaction to automatically page all the libary information.
 This is mainly information for the typechecker environment.
 Printing a prompt first means it should happen while the first line is being entered,
 so effectively the background.
</summary>
</member>
<member name="F:Microsoft.FSharp.Compiler.Interactive.Shell.FsiConsoleInput.firstLine">
<summary>
 When using a key-reading console this holds the first line after it is read
</summary>
</member>
<member name="F:Microsoft.FSharp.Compiler.Interactive.Shell.FsiConsoleInput.consoleReaderStartupDone">
<summary>
 This threading event gets set after the first-line-reader has finished its work
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:Microsoft.FSharp.Compiler.Interactive.Shell.FsiConsoleInput.FirstLine(Microsoft.FSharp.Core.FSharpOption{System.String})">
<summary>
 Peek on the standard input so that the user can type into it from a console window.
</summary>
</member>
<member name="P:Microsoft.FSharp.Compiler.Interactive.Shell.FsiConsoleInput.FirstLine">
<summary>
 Peek on the standard input so that the user can type into it from a console window.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:Microsoft.FSharp.Compiler.Interactive.Shell.FsiCommandLineOptions.sourceFiles">
<summary>
 Process command line, flags and collect filenames
 The ParseCompilerOptions function calls imperative function to process &quot;real&quot; args
 Rather than start processing, just collect names, then process them.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:Microsoft.FSharp.Compiler.Interactive.Shell.FsiConsoleOutput.textWriter">
<summary>
 uprintf to write usual responses to stdout (suppressed by --quiet), with various pre/post newlines
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:Microsoft.FSharp.Compiler.Interactive.Shell.FsiConsoleOutput.eprintf``2(``0)">
<summary>
 eprintf to write errors to stderr (not suppressable (yet))
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:Microsoft.FSharp.Compiler.Interactive.Shell.ErrorLoggerThatStopsOnFirstError.AbortOnError">
<summary>
 A helper function to check if its time to abort
</summary>
</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Shell.ErrorLoggerThatStopsOnFirstError">
<summary>
 This ErrorLogger reports all warnings, but raises StopProcessing on first error or early exit
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:Microsoft.FSharp.Compiler.Interactive.Shell.SetServerCodePages(Microsoft.FSharp.Compiler.Interactive.Shell.FsiCommandLineOptions)">
<summary>
 Set the input/output encoding. The use of a thread is due to a known bug on
 on Vista where calls to System.Console.InputEncoding can block the process.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Shell.MagicAssemblyResolution">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Shell.NativeMethods">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Shell.Utilities">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Shell">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:Microsoft.FSharp.Compiler.Interactive.Utils">
<summary>
 Cursor position management
</summary>
</member>
</members>
</doc>
